@model PBSDAL.Entity.Team

@{
    ViewBag.Title = "Add new team";
}
<section class="content">
    <!-- SELECT2 EXAMPLE -->
    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title">Add New Team member</h3>
            <div class="box-tools pull-right">
                <a href="@Url.Action("Index", "Team")" class="btn btn-success"><i class="fa fa-list-alt" aria-hidden="true"> Team member List </i></a>
            </div>
        </div><!-- /.box-header -->
        <div class="box-body">
            @using (Html.BeginForm("AddTeam", "Team", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-6" style="direction:ltr">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control select2", placeholder = "Enter new member name here" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div><!-- /.form-group -->                          

                        <div class="form-group">
                            @Html.LabelFor(model => model.MyJob)
                            @Html.EditorFor(model => model.MyJob, new { htmlAttributes = new { @class = "form-control select2", placeholder = "Enter his job" } })
                            @Html.ValidationMessageFor(model => model.MyJob, "", new { @class = "text-danger" })
                        </div>  
                           
                        <div class="form-group">
                            @Html.LabelFor(model => model.File)
                            <input id="File" name="file" class="form-control select2" type="file" onchange="show(this)" placeholder="Browse his profile image" />                            
                            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.TeamCategory)
                            <select id="TeamCategory" name="TeamCategory" class="form-control select2" style="width: 100%;">
                                <option selected="selected">-- Select Category --</option>
                                <option value="a1">PBS’ Team</option>
                                <option value="a2">California</option>
                                <option value="a3">Delaware</option>                                
                            </select>
                            @*@Html.DropDownListFor(model => model.TeamCategory, listItems, "-- Select Category --", new { htmlAttributes = new { @class = "form-control select2" } })*@
                            @*@Html.EditorFor(model => model.TeamCategory, new { htmlAttributes = new { @class = "form-control select2", placeholder = "Select his category" } })*@
                            @Html.ValidationMessageFor(model => model.TeamCategory, "", new { @class = "text-danger" })
                        </div>  

                    </div><!-- /.col -->
                    <div class="col-md-6" style="direction:rtl;">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Ar_Name)
                            @Html.EditorFor(model => model.Ar_Name, new { htmlAttributes = new { @class = "form-control select2", rows = "3", placeholder = "" } })
                            @Html.ValidationMessageFor(model => model.Ar_Name, "", new { @class = "text-danger" })
                        </div><!-- /.form-group -->
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.ArMyJob)
                            @Html.EditorFor(model => model.ArMyJob, new { htmlAttributes = new { @class = "form-control select2", placeholder = "" } })
                            @Html.ValidationMessageFor(model => model.ArMyJob, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group" style="direction:ltr">
                            <img src="~/imagesMVC/profile.jpg" width="70" height="70" id="TmImg" />
                        </div>

                    </div><!-- /.col -->
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="إضافة حدث (Add)" class="btn btn-info" />
                        </div>
                    </div>
                </div><!-- /.row -->
            }
        </div><!-- /.box-body -->
    </div><!-- /.box -->
</section>

<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                var ext = input.value.match(/\.(.+)$/)[1].toLowerCase();
                switch (ext) {
                    case 'jpg':
                    case 'jpeg':
                    case 'png':
                    case 'gif':
                        $('#TmImg').attr('src', e.target.result);
                        //$('#DefaultImagePath').show();
                        break;
                    default:
                        swal("Invalid Image Format !!!", "Please upload an Image of Jpeg/Jpg/Png/Gif Format", "error");
                        $("#File").val('');
                }
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>